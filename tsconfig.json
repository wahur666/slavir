{
    "compilerOptions": {
        "target": "ES2020",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        "lib": ["ES2020", "DOM"],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
        "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
        "module": "ES2020",                                /* Specify what module code is generated. */
        "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
        "resolveJsonModule": true,                        /* Enable importing .json files */
        "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
        "outDir": "./out",                                   /* Specify an output folder for all emitted files. */
        "removeComments": true,                           /* Disable emitting comments. */
        "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
        "importsNotUsedAsValues": "error",               /* Specify emit/checking behavior for imports that are only used for types */
        "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
        "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
        "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
        "strict": true,                                      /* Enable all strict type-checking options. */
        "noImplicitAny": false,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
        "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
        "strictBindCallApply": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
        "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
        "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
        "strictPropertyInitialization": false
    },
    "include": [
        "src/"
    ],
    "exclude": [
        "node_modules",
        "src/assets/*.tsx"
    ]
}
